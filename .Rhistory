?sd
# Ecospat useful functions with examples
library(ecospat)
##### Maximum TSS #####
# ecospat.max.tss
# Calculates values for True skill statistic (TSS) along different thresholds,
# considering this time 0.01 increments (i.e. 99 thresholds).
data(ecospat.testData)
Pred <- ecospat.testData$glm_Agrostis_capillaris
Sp.occ <- ecospat.testData$Agrostis_capillaris
TSS100 <- ecospat.max.tss(Pred, Sp.occ)
ecospat.plot.tss(Pred, Sp.occ)
TSS100
Sp.occ
Pred
?ecospat.max.tss
?ecospat.CommunityEval
eval <- ecospat.testData[c(53,62,58,70,61,66,65,71,69,43,63,56,68,57,55,60,54,67,59,64)]
eval[1:10, 1:3]
pred <- ecospat.testData[c(73:92)]
pred[1:10, 1:3]
ecospat.CommunityEval(eval, pred, proba = TRUE, ntir = 10)
ecospat.CommunityEval(eval, pred, proba = FALSE, ntir = 10)
ecospat.CommunityEval(eval, pred, proba = TRUE, ntir = 10)
pred
eval
ecospat.CommunityEval(eval, pred, proba = TRUE, ntir = 10)
x <- ecospat.CommunityEval(eval, pred, proba = FALSE, ntir = 10)
y <- ecospat.CommunityEval(eval, pred, proba = TRUE, ntir = 10)
x
x$deviation.rich.pred
x$overprediction
x$underprediction
x$prediction.success
View(eval)
View(pred)
x$sensitivity
x$specificity
x$kappa
x$similarity
x$Jaccard
y
y$deviation.rich.pred
y <- ecospat.CommunityEval(eval, pred, proba = TRUE, ntir = 100)
y$deviation.rich.pred
y$overprediction
y$underprediction
y$prediction.success
y$sensitivity
y$specificity
y$kappa
y$TSS
y$similarity
y$Jaccard
